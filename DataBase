using System;

namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            UserDataBase userData = new UserDataBase();
            UI ui = new UI(userData);
        }
    }

    class UserDataBase 
    {
        private List<User> _users = new List<User>();

        public void AddUser(User user)
        {
            _users.Add(user);
        }

        public void RemoveUser(int id)
        {
            _users.RemoveAt(id);
        }

        public List<User> GetDataBase()
        {
            return _users;
        }
        
        public void UpdateDataBase(List<User> users)
        {
            _users = users;
        }
    }

    class User
    {
        protected int id;
        protected string name;
        protected int level;
        protected bool banned;

        public User(string name, int level, bool banned = false)
        {
            this.name = name;
            this.level = level;
            this.banned = banned;
        }

        public string GetName()
        {
            return name;
        }
        public int GetLevel()
        {
            return level;
        }
        public bool GetStatus()
        {
            return banned;
        }

        public void Ban()
        {
            banned = true;
        }

        public void Unban()
        {
            banned = false;  
        }
    }

    class UI
    {
        private string _stopWord = "exit";
        private string _addWord = "add";
        private string _removeWord = "rem";
        private string _banWord = "ban";
        private string _unbanWord = "unban";
        private string _showWord = "show";
        private string _userInput = "";
        private int _id;
        private List<User> users = new List<User>(); 
        public UI(UserDataBase dataBase)
        {
            users = dataBase.GetDataBase();
            Console.WriteLine("Commands: eixt, add, rem, ban, show, unban");
            
            while (_userInput != _stopWord)
            {
                _userInput = Console.ReadLine();

                if (_userInput == _addWord)
                {
                    AddUser(dataBase);
                }
                else if (_userInput == _removeWord)
                {
                    RemoveUser(dataBase);
                }
                else if (_userInput == _showWord)
                {
                    Show(dataBase);
                }
                else if (_userInput == _banWord)
                {
                    BanUser(dataBase);
                }
                else if (_userInput == _unbanWord)
                {
                    UnbanUser(dataBase);
                }
                dataBase.UpdateDataBase(users);
            }
        }

        private void BanUser(UserDataBase dataBase)
        {
            Console.WriteLine("id = ...");
            _id = Convert.ToInt32(Console.ReadLine());
            users[_id].Ban();
        }
        private void UnbanUser(UserDataBase dataBase)
        {
            Console.WriteLine("id = ...");
            _id = Convert.ToInt32(Console.ReadLine());
            users[_id].Unban();
        }

        private void Show(UserDataBase dataBase)
        {
            for (int i = 0; i < users.Count; i++)
            {
                Console.WriteLine(users[i].GetName() + " whith level:" + users[i].GetLevel() + " and ban status: " + users[i].GetStatus());
            }
        }

        private void AddUser(UserDataBase dataBase)
        {
            Console.WriteLine("name = ...");
            string name = Console.ReadLine();
            Console.WriteLine("level = ...");
            int level = Convert.ToInt32(Console.ReadLine());
            User user = new User(name, level);
            dataBase.AddUser(user);
        }

        private void RemoveUser(UserDataBase dataBase)
        {
            Console.WriteLine("id = ...");
            _id = Convert.ToInt32(Console.ReadLine());
            dataBase.RemoveUser(_id);
        }
    }
}
